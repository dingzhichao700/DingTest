<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="520" height="420" creationComplete="initWindow(event)">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Style source="JsonGen.css"/>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	<fx:Script>
		<![CDATA[
			import com.as3xls.xls.Cell;
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			
			import flash.utils.getTimer;
			
			import mx.collections.ArrayCollection;
			import mx.effects.effectClasses.ZoomInstance;
			import mx.events.FlexEvent;
			
			private var so:SharedObject;
			private var excelPath:String;
			private var configPath:String;
			private var outPath1:String;
			private var outPath2:String;
			private var resultObj:Object;
			private var myFileStream:FileStream;
			
			private var excelDic:Dictionary;
			private var configDic:Dictionary;
			
			private function initWindow(event:FlexEvent):void {
				txtDataPath.text = "Excel路径：";
				so = SharedObject.getLocal("JsonGenData","/");
				if(so.data.ExcelPath){
					excelPath = so.data.ExcelPath.name;
					txtDataPath.text = "Excel路径：" + excelPath;
				}
				if(so.data.ConfigPath){
					configPath = so.data.ConfigPath.name;
					txtConfigPath.text = "Config路径：" + configPath;
					outPath1 = configPath.slice(0, configPath.indexOf("template"));
					outPath1 = outPath1 + "out\\clientjs";
					outPath2 = configPath.slice(0, configPath.indexOf("tools"));
					outPath2 = outPath2 + "code\\game\\resource\\assets\\config";
				}
			}
			
			//Excel路径  
			private function setExcelPath(e:MouseEvent):void {
				var file:File = new File();  
				file.browseForDirectory("请选择目录");   
				file.addEventListener(Event.SELECT, selectExcel);  
			}
			
			private function selectExcel(e:Event):void{  
				excelPath =  e.target.nativePath
				txtDataPath.text = "Excel路径：" + excelPath;   
				var o:Object = new Object();
				o.name = excelPath;
				so.data.ExcelPath = o;
				so.flush();
			}
			
			//Config路径  
			private function setConfigPath(e:MouseEvent):void {
				var file:File = new File();  
				file.browseForDirectory("请选择目录");   
				file.addEventListener(Event.SELECT, selectConfig);  
			}
			
			private function selectConfig(e:Event):void{  
				configPath =  e.target.nativePath;
				txtConfigPath.text = "Config路径：" + configPath;
				var o:Object = new Object();
				o.name = configPath;
				so.data.ConfigPath = o;
				so.flush();
			}
			
			/**生成数据*/
			private function genData(e:MouseEvent):void {
				txtInfo.text = "开始打包数据：\n";
				var startTime:Number = getTimer();
				recordConfig();
				readExcelAndCharge();
				outPutFile();
				var finalFile:File = new File(outPath1 + "\\all.json");
				txtInfo.appendText("打包并复制完成，文件" + (finalFile.size/1024).toFixed(2) + "kb，耗时 " + ((getTimer() - startTime)/1000) + "秒");
			}
			
			/**记录config数据*/
			private function recordConfig():void {
				configDic = new Dictionary();
				var list:Array = new File(configPath).getDirectoryListing();
				for(var i:int = 0; i<list.length;i++){
					var arr:Array =	File(list[i]).url.split("/");
					var name:String = String(arr[arr.length-1]).split(".")[0];
					configDic[name] = ConfigVO.makeConfig(File(list[i]).nativePath);
				}
			}
			
			/**遍历读取excel数据，依次对照config检查及填充*/
			private function readExcelAndCharge():void {
				/*excel按表结构分个组先*/
				var arr:Array = new File(excelPath).getDirectoryListing();
				excelDic = new Dictionary();
				
				var count:int = 0;
				resultObj = new Object;
				for (var i:int = 0; i < arr.length  ; i++) {
					/*以一般文件来获取excel文件*/
					var temp:File = new File(arr[i].nativePath);
					
					/*将该excel文件内容流式写入byte数据*/
					var bytes:ByteArray = new ByteArray();
					var stream:FileStream = new FileStream();
					stream.open(temp, FileMode.READ);
					stream.readBytes(bytes);
					stream.close();
					
					/*最后以excel文件形式还原出来*/
					var excel:ExcelFile = new ExcelFile();
					excel.loadFromByteArray(bytes);
					
					/*将这个excel文件中的若干张表，按名称查找对应的配置，并生成对应数据*/
					var list:ArrayCollection = excel.sheets;
					for(var j:int = 0; j < list.length;j++){
						var config:ConfigVO = getConfig(Sheet(list[j]).name);
						if(config /*  && Sheet(list[j]).name == "data_wing"  */ ){
							chargeData(list[j], config);
							count++;
							txtInfo.appendText(count + ":" + Sheet(list[j]).name + "\n");
						}
					}
				}
			}
			
			/**填充数据*/
			private function chargeData(sheet:Sheet, config:ConfigVO):void {
				var data:Object = new Object();大师兄
				data.dataList = [];
				data.keyList = config.keyList;
				
				for(var i:int = 2; i < sheet.rows; i++) { //flex读excel好像会在最底下多读一行空数据出来，这里length-1
					var innerList:Array = [];
					/**是否包含空值*/
					var withinEmpty:Boolean = false;
					for(var j:int = 0; j < config.attrList.length;j++){
						var cell:Cell = sheet.getCell(i, findIndex(config.attrList[j].name, sheet.values[0]));
						innerList.push(config.attrList[j].size == 0 ? int(cell.value) : (cell.value + ""));
						withinEmpty = String(cell.value) == "";
					}
					if(!withinEmpty){
						data.dataList.push(innerList);
					}
				}
				resultObj[sheet.name] = data; 
			}
			
			private function findIndex(name:String, indexData:Array):int {
				for(var i:int = 0; i < indexData.length;i++){
					if(Cell(indexData[i]).value == name){
						return i;
					}
				}
				return 0;
			}
			
			/**输出到文件*/
			private function outPutFile():void {
				/**最终输出文件all.json*/
				var resultFile:File = new File(outPath1 + "\\all.json");
				if(resultFile.exists){
					resultFile.deleteFile();
				}
				var fs:FileStream = new FileStream();
				fs.open(resultFile, FileMode.UPDATE);
				var str:String = JSON.stringify(resultObj);
				var bytes:ByteArray = new ByteArray();
				bytes.writeUTFBytes(str);
				fs.writeBytes(bytes);
				fs.close();  
				
				var targetFile:File = new File(outPath2 + "/all.json");
				resultFile.copyTo(targetFile, true);
			}
			
			/**获取某配置*/
			private function getConfig(name:String):ConfigVO {
				if(configDic[name]){
					return configDic[name];
				}
				return null;
			}
		]]>
	</fx:Script>
	<s:Button x="27" y="22" height="28" label="选择路径" click="setExcelPath(event)"/>
	<s:Button x="27" y="88" height="28" label="选择路径" click="setConfigPath(event)"/>
	<s:Button x="26" y="362" width="77" height="28" label="生成" click="genData(event)"/>
	<s:Label id="txtDataPath" x="28" y="60" width="424" height="23" fontFamily="Arial" fontSize="14"
			 text="Excel路径："/>
	<s:Label id="txtConfigPath" x="28" y="124" width="424" height="23" fontFamily="Arial"
			 fontSize="14" text="Config路径："/>
	<s:TextArea id="txtInfo" x="26" y="167" width="409" height="177" color="#828282"
				fontFamily="Arial" fontStyle="normal" fontWeight="normal"
				prompt="Excel路径：*:\CQTX\doc\Excel数据配置                            Config路径：*:\CQTX\tools\datagen\template\clientjs"
				skinClass="spark.skins.spark.TextAreaSkin"/>
</s:WindowedApplication>
